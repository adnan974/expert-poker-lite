/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tablejeu;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import modele.Carte;
import modele.Joueur;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author borri
 */
public class TableJeuFrame extends javax.swing.JFrame implements Observer {

    Socket me;
    Joueur joueur;
    boolean isPlaying;
    ArrayList<Carte> cartesPlateau;

    /**
     * Creates new form TableJeuFrame
     */
    public TableJeuFrame() {
        initComponents();
    }

    public TableJeuFrame(Socket me, Joueur joueur) {
        cartesPlateau = new ArrayList<Carte>();
        initComponents();
        placerCartesSurPlateau();
        placerCartesEnMain();
        this.setBackground(new Color(0, 102, 0));
        this.me = me;
        this.joueur = joueur;
        this.joueur.setInfopartie("début de partie pour " + this.joueur.getNom());
        this.joueur.addObserver(this);
        isPlaying = true;
        this.btn_miser.setEnabled(false);
        jlbl_phraseAccueil.setOpaque(true);        
        jlbl_phraseAccueil.setText("Bonjour " + this.joueur.getNom() + ", nous attendons un deuxième joueur... ");
        jlbl_phraseAccueil.setHorizontalAlignment(JLabel.CENTER);
        this.actualiserStack();        
        waitForPlayerStatus();

        ImageIcon icone = new ImageIcon("img/experpokerlite.png");

        icone.setImage(icone.getImage().getScaledInstance(jlbl_logo.getWidth(), jlbl_logo.getHeight(), Image.SCALE_SMOOTH));
        jlbl_logo.setIcon(icone);
        jlbl_logo.repaint();

        Font f1 = null;
        try {
            File fis = new File("font/bankgothic.ttf");
            f1 = Font.createFont(Font.TRUETYPE_FONT, fis);
            f1 = f1.deriveFont((float) 15.0);

        } catch (Exception e) {
        }

        Font f2 = null;
        try {
            File fis = new File("font/bankgothicbold.ttf");
            f2 = Font.createFont(Font.TRUETYPE_FONT, fis);
            f2 = f2.deriveFont((float) 15.0);

        } catch (Exception e) {
        }

        txt_mise.setFont(f1);
        jLabel1.setFont(f1);
        btn_miser.setFont(f2);
        jlbl_stack.setFont(f2);
        jlbl_phraseAccueil.setFont(f2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_miser = new javax.swing.JButton();
        jlbl_cartemain2 = new javax.swing.JLabel();
        jlbl_cartemain1 = new javax.swing.JLabel();
        jlbl_cartePlateau2 = new javax.swing.JLabel();
        jlbl_cartePlateau1 = new javax.swing.JLabel();
        jlbl_cartePlateau3 = new javax.swing.JLabel();
        jlbl_cartePlateau4 = new javax.swing.JLabel();
        jlbl_cartePlateau5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlbl_stack = new javax.swing.JLabel();
        txt_mise = new javax.swing.JTextField();
        jlbl_phraseAccueil = new javax.swing.JLabel();
        jlbl_logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 0));
        setForeground(new java.awt.Color(0, 102, 0));

        btn_miser.setText("Miser");
        btn_miser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_miserActionPerformed(evt);
            }
        });

        jLabel1.setText("Vous avez : ");

        txt_mise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_miseActionPerformed(evt);
            }
        });

        jlbl_phraseAccueil.setBackground(new java.awt.Color(151, 151, 151));
        jlbl_phraseAccueil.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jlbl_cartemain1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jlbl_cartemain2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txt_mise, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_miser))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlbl_stack, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jlbl_cartePlateau1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbl_cartePlateau2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbl_cartePlateau3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbl_cartePlateau4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbl_cartePlateau5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jlbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jlbl_phraseAccueil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jlbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlbl_phraseAccueil, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlbl_cartePlateau1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlbl_cartePlateau3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlbl_cartePlateau2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbl_cartePlateau5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbl_cartePlateau4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbl_stack, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_miser)
                            .addComponent(txt_mise, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbl_cartemain2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbl_cartemain1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_miseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_miseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_miseActionPerformed

    private void btn_miserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_miserActionPerformed

        try {
            Integer newMise = Integer.parseInt(txt_mise.getText());
            
            if (this.joueur.getMiseMinimum() != 0 && this.joueur.getMiseMinimum() != null)
            {
                if (newMise < this.joueur.getMiseMinimum())
                
                {
                    this.jlbl_phraseAccueil.setText("Vous devez miser au moins " + this.joueur.getMiseMinimum() + " !" );
                }else 
                {
                    this.joueur.setMise(newMise);
                    this.joueur.setStack(this.joueur.getStack() - this.joueur.getMise());
                    this.sendNewPlayerStatus();
                    this.actualiserStack();
                    btn_miser.setEnabled(false); 
                }
            
            }else {
                    this.joueur.setMise(newMise);
                    this.joueur.setStack(this.joueur.getStack() - this.joueur.getMise());
                    this.sendNewPlayerStatus();
                    this.actualiserStack();
                    btn_miser.setEnabled(false);
            }
            

        } catch (Exception e) {
            System.out.println("CLIENT ERREUR : erreur lors de l'envoi du nouveau statut joueur");
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btn_miserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableJeuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableJeuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableJeuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableJeuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableJeuFrame().setVisible(true);
            }
        });
    }

    public Thread waitForPlayerStatus() {
        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {

                while (true) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        System.out.println("CLIENT ERREUR : erreur de thread");
                        System.out.println(e.getMessage());
                        Logger.getLogger(TableJeuFrame.class.getName()).log(Level.SEVERE, null, e);
                    }
                    System.out.println("CLIENT : Attente d'objets Joueur du serveur ...");
                    try {
                        ObjectInputStream ois = new ObjectInputStream(me.getInputStream());
                        Object objetRecu = ois.readObject();
                        System.out.println("CLIENT : reception d'un objet");

                        if (objetRecu instanceof Joueur) {
                            System.out.println("CLIENT : l'objet recu est un Joueur");
                            Joueur newEtatJoueur = (Joueur) objetRecu;
 

                            changerEtatJoueur(newEtatJoueur);
                        }
                    } catch (Exception e) {
                        System.out.println("CLIENT ERREUR : une erreur est survenue lors de la reception d'etat joueur...");
                        System.out.println(e.getMessage());
                    }
                }
            }
        });
        t.start();
        return t;
        //waitForCards();
    }

    public void sendNewPlayerStatus() {
        this.btn_miser.setEnabled(false);
        System.out.println("CLIENT : envoi d'un nouveau statut joueur ...");
        System.out.println("NOM : " + this.joueur.getNom() );
        System.out.println("MISE : " + this.joueur.getMise() );
        System.out.println("MISE MINIMUM : " + this.joueur.getMiseMinimum() );
        System.out.println("PREMIER A MISER ? : " + this.joueur.getPremier_a_miser());
        System.out.println("INFO PARTIE : " + this.joueur.getInfoPartie() );
        
        
        
        try {
            ObjectOutputStream oos = new ObjectOutputStream(me.getOutputStream());
            oos.writeObject(this.joueur);
            oos.flush();
        } catch (IOException e) {
            System.out.println("CLIENT ERREUR : une erreur est survenue lors de lenvoi de l'etat joueurs au serveur ...");
            System.out.println(e.getMessage());
        }

    }

    public void changerEtatJoueur(Joueur newEtatJoueur) {
        this.jlbl_phraseAccueil.setText("A vous de jouer, " + this.joueur.getNom());
        this.joueur.changerStatutJoueur(newEtatJoueur);
        System.out.println("CLIENT INFOS : ---------------------------");
        System.out.println("Nom : " + this.joueur.getNom());
        System.out.println("Stack : " + this.joueur.getStack());
        System.out.println("Mise : " + this.joueur.getMise());
        System.out.println("MiseMini : " + this.joueur.getMiseMinimum());
        System.out.println("Mention Info Partie : " + this.joueur.getInfoPartie());
        System.out.println("Premier à miser ? " + this.joueur.getPremier_a_miser());      
        System.out.println("----------------------------------------");

    }

    public void placerCartesSurPlateau(ArrayList<Carte> listeCartesPlateau) {

        ImageIcon icone_ct1 = new ImageIcon("img/" + listeCartesPlateau.get(0).getCheminImage());
        ImageIcon icone_ct2 = new ImageIcon("img/" + listeCartesPlateau.get(1).getCheminImage());
        ImageIcon icone_ct3 = new ImageIcon("img/" + listeCartesPlateau.get(2).getCheminImage());
        ImageIcon icone_ct4 = new ImageIcon("img/" + listeCartesPlateau.get(3).getCheminImage());
        ImageIcon icone_ct5 = new ImageIcon("img/" + listeCartesPlateau.get(4).getCheminImage());

        icone_ct1.setImage(icone_ct1.getImage().getScaledInstance(jlbl_cartePlateau1.getWidth(), jlbl_cartePlateau1.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau1.setIcon(icone_ct1);
        jlbl_cartePlateau1.repaint();

        icone_ct2.setImage(icone_ct2.getImage().getScaledInstance(jlbl_cartePlateau2.getWidth(), jlbl_cartePlateau2.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau2.setIcon(icone_ct2);
        jlbl_cartePlateau2.repaint();

        icone_ct3.setImage(icone_ct3.getImage().getScaledInstance(jlbl_cartePlateau3.getWidth(), jlbl_cartePlateau3.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau3.setIcon(icone_ct3);
        jlbl_cartePlateau3.repaint();

        icone_ct4.setImage(icone_ct4.getImage().getScaledInstance(jlbl_cartePlateau4.getWidth(), jlbl_cartePlateau4.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau4.setIcon(icone_ct4);
        jlbl_cartePlateau4.repaint();

        icone_ct5.setImage(icone_ct5.getImage().getScaledInstance(jlbl_cartePlateau5.getWidth(), jlbl_cartePlateau5.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau5.setIcon(icone_ct5);
        jlbl_cartePlateau5.repaint();

    }

    public void placerCartesSurPlateau() {

        ImageIcon icone_ct1 = new ImageIcon("img/nocard.png");
        ImageIcon icone_ct2 = new ImageIcon("img/nocard.png");
        ImageIcon icone_ct3 = new ImageIcon("img/nocard.png");
        ImageIcon icone_ct4 = new ImageIcon("img/nocard.png");
        ImageIcon icone_ct5 = new ImageIcon("img/nocard.png");

        icone_ct1.setImage(icone_ct1.getImage().getScaledInstance(jlbl_cartePlateau1.getWidth(), jlbl_cartePlateau1.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau1.setIcon(icone_ct1);
        jlbl_cartePlateau1.repaint();

        icone_ct2.setImage(icone_ct2.getImage().getScaledInstance(jlbl_cartePlateau2.getWidth(), jlbl_cartePlateau2.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau2.setIcon(icone_ct2);
        jlbl_cartePlateau2.repaint();

        icone_ct3.setImage(icone_ct3.getImage().getScaledInstance(jlbl_cartePlateau3.getWidth(), jlbl_cartePlateau3.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau3.setIcon(icone_ct3);
        jlbl_cartePlateau3.repaint();

        icone_ct4.setImage(icone_ct4.getImage().getScaledInstance(jlbl_cartePlateau4.getWidth(), jlbl_cartePlateau4.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau4.setIcon(icone_ct4);
        jlbl_cartePlateau4.repaint();

        icone_ct5.setImage(icone_ct5.getImage().getScaledInstance(jlbl_cartePlateau5.getWidth(), jlbl_cartePlateau5.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartePlateau5.setIcon(icone_ct5);
        jlbl_cartePlateau5.repaint();

    }

    public void placerCartesEnMain() {

        ImageIcon icone_cm1 = new ImageIcon("img/nocard.png");
        ImageIcon icone_cm2 = new ImageIcon("img/nocard.png");

        icone_cm1.setImage(icone_cm1.getImage().getScaledInstance(jlbl_cartemain1.getWidth(), jlbl_cartemain1.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartemain1.setIcon(icone_cm1);
        jlbl_cartemain1.repaint();

        icone_cm2.setImage(icone_cm2.getImage().getScaledInstance(jlbl_cartemain2.getWidth(), jlbl_cartemain2.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartemain2.setIcon(icone_cm2);
        jlbl_cartemain2.repaint();

    }

    public void placerCartesEnMain(ArrayList<Carte> listeCartesEnMain) {

        ImageIcon icone_cm1 = new ImageIcon("img/" + listeCartesEnMain.get(0).getCheminImage());
        ImageIcon icone_cm2 = new ImageIcon("img/" + listeCartesEnMain.get(1).getCheminImage());

        icone_cm1.setImage(icone_cm1.getImage().getScaledInstance(jlbl_cartemain1.getWidth(), jlbl_cartemain1.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartemain1.setIcon(icone_cm1);
        jlbl_cartemain1.repaint();

        icone_cm2.setImage(icone_cm2.getImage().getScaledInstance(jlbl_cartemain2.getWidth(), jlbl_cartemain2.getHeight(), Image.SCALE_SMOOTH));
        jlbl_cartemain2.setIcon(icone_cm2);
        jlbl_cartemain2.repaint();

    }

    public void actualiserStack() {
        jlbl_stack.setText(this.joueur.getStack().toString());  
        jlbl_stack.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_miser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlbl_cartePlateau1;
    private javax.swing.JLabel jlbl_cartePlateau2;
    private javax.swing.JLabel jlbl_cartePlateau3;
    private javax.swing.JLabel jlbl_cartePlateau4;
    private javax.swing.JLabel jlbl_cartePlateau5;
    private javax.swing.JLabel jlbl_cartemain1;
    private javax.swing.JLabel jlbl_cartemain2;
    private javax.swing.JLabel jlbl_logo;
    private javax.swing.JLabel jlbl_phraseAccueil;
    private javax.swing.JLabel jlbl_stack;
    private javax.swing.JTextField txt_mise;
    // End of variables declaration//GEN-END:variables

        @Override
    public void update(Observable o, Object arg) {
        //Joueur newEtatJoueur = (Joueur)o;
        this.placerCartesSurPlateau(this.joueur.getCartesPlateau());
        this.placerCartesEnMain(this.joueur.getMainJoueur());
        this.actualiserStack();
        this.jlbl_phraseAccueil.setText(this.joueur.getInfoPartie());
        
        if(this.joueur.getMiseMinimum() != 0 && this.joueur.getMise() == 0){
            this.btn_miser.setEnabled(true);
        }else if (this.joueur.getMiseMinimum() == 0 && this.joueur.getPremier_a_miser() == true){
            this.btn_miser.setEnabled(true);
        }else {
            this.btn_miser.setEnabled(false);
        }
        
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}

